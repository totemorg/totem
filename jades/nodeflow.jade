//- UNCLASSIFIED

extends site
append site_help
	:markdown
		Provides a &view to the model library &lib [exlib,swaglib,...] at version &ver.
		Consult the [api](/api.view?goto=Engines) and the [skinguide](/skinguide?goto=Workflows) 
		for help on how to create engines and use them in workflows.

append site_parms
	- options = { red:"red", Threaded:"",PetriNet:"",StateMachine1:"",StateMachine2:"",Python2:"",Python1:"",test5:"",test4:"",test3:"",test2:"",test1:"",test6:"",test7:"",test8:"",test9:"",test10:"" }
	- view = query.view || "Typical"

append site_body

	- ds = query.option || query.ds || "Python1"
	- dims = "800,600"

	if ds == "red"
		#post.model(path=hosts.red,dims=dims,wrap)

	else
		#flow.model(path=ds,dims=dims,wrap)

		#grid.options(
			path="/simoptions.db",
			page=25,
			wrap,
			cols="name,steps.n,t.n,delta.n,snappath,snapperiod.n,screen.x,url")
		//
			#grid.stats(
				path="/simstats.db",
				page=25,refresh,
				cols="t.date,name,step.n,user,tokens,state,delay")

			#grid.apps(
				path="/apps.db",
				page=25,
				cols="Name.t,Nick.t,Title.t,DB.t,Cores.n,Sockets.c,Domain.t,PKI.c,Port.n")

			#grid.cores(
				path="/simcores.db",
				page=25,
				cols="engine,timeout.n,type,client,name,thread.n,index.n")

			#grid.engines(
				path="/engines.db",kiss,
				page=25,
				wrap,
				cols="Name,Vars.x,Engine,Code.x,Classif")

				:markdown
					Consult the [api](/api.view?goto=Engines) and the [skinguide](/skinguide?goto=Workflows) 
					for help on how to create engines and use them in workflows.

				#form.engine(
					path="/engines.db",
					page=25,
					cols="Name,Vars.x,Engine,Code.x,Classif")

						:markdown
							Consult the [api](/api.view?goto=Engines) and the [skinguide](/skinguide?goto=Workflows) 
							for help on how to create engines and use them in workflows.
		
//- UNCLASSIFIED
