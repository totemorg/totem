# TOTEM [WWW](https://github.com/totemstan/totem)  [COE](https://sc.appdev.proj.coe/acmesds/enums)  [SBU](https://gitlab.west.nga.ic.gov/acmesds/enums)

**TOTEM** provides a barebones web service with the following customizable features:

	+ endpoint routing
	+ http/https service
	+ denial-of-service protection
	+ secure link providing encrypted inter-client communications with antibot guard
	+ client profiles 
	+ PKI encryption and authentication
	+ fault protected run states
	+ indexing, uploading, downloading and cacheing static files
	+ crud interface
	+ mysql- and neo4j-database agnosticator
	+ task queuing and regulation
	+ file polling and services
	+ automattic server cert generation
	+ task sharding
	+ file stream and ingest
	+ data fetching with various protocols
	+ smartcard reader
  
**TOTEM** defines CRUD (POST, GET, PUT, DELETE) endpoints (aka *NODE*s) to access *DATASET*s, 
*FILE*s or *COMMAND*s:

	DATASET.TYPE ? QUERY
	AREA/PATH/FILE.TYPE ? QUERY
	COMMAND.TYPE ? QUERY

By default, **TOTEM** provides `db | xml | csv | json` *TYPE*s for converting *DATASET*s, 
`riddle | task | ping` *COMMAND*s for validating a session, sharding tasks,
and the `stores | shares` areas for sharing static *FILE*s.

## Installation

Clone **JSDB** from one of its REPOs:

	cd MYPROJECT
	git clone REPO/totemstan/totem
	git clone REPO/totemstan/securelink
	git clone REPO/totemstan/enums
	git clone REPO/totemstan/jsdb

## Setup

	npm run setprot						# Configure for protected mode
	npm run setdebug					# Configure for debugging mode
	npm run setoper						# Configure for operational mode
	npm run setprod						# Configure for production mode

## Start

	npm run	startdbs					# Start required database servers
	npm run	start						# Start totem

## Maintenance
	
	npm run redoc						# Update repo
	npm run verminor					# Roll version
	npm run vermajor					# Roll version
	rpm run	relink						# Relink dependent TOTEM modules

## Usage

Require, configure and start **TOTEM**:
	
	const TOTEM = require("./totem");

	TOTEM.config({
		key: value, 						// set key
		"key.key": value, 					// indexed set
		"key.key.": value					// indexed append
	}, err => {
		console.log( err ? "something evil is lurking" : "look mom - Im running!");
	});

where its configuration keys (
[WWW](http://totem.zapto.org/shares/prm/totem/index.html) 
[COE](https://totem.west.ile.nga.ic.gov/shares/prm/totem/index.html) 
[SBU](https://totem.nga.mil/shares/prm/totem/index.html)
)
follow the ENUM deep copy conventions (
[WWW](https://github.com/totemstan/enum) 
[COE](https://sc.appdev.proj.coe/acmesds/enum) 
[SBU](https://gitlab.west.nga.ic.gov/acmesds/enum)
).


## Program Reference
<details>
<summary>
<i>Open/Close</i>
</summary>
{{>main}}
</details>

## Contacting, Contributing, Following

Feel free to 
* submit and status **TOTEM** issues (
[WWW](http://totem.zapto.org/issues.view) 
[COE](https://totem.west.ile.nga.ic.gov/issues.view) 
[SBU](https://totem.nga.mil/issues.view)
)  
* contribute to **TOTEM** notebooks (
[WWW](http://totem.zapto.org/shares/notebooks/) 
[COE](https://totem.west.ile.nga.ic.gov/shares/notebooks/) 
[SBU](https://totem.nga.mil/shares/notebooks/)
)  
* revise **TOTEM** requirements (
[WWW](http://totem.zapto.org/reqts.view) 
[COE](https://totem.west.ile.nga.ic.gov/reqts.view) 
[SBU](https://totem.nga.mil/reqts.view), 
)  
* browse **TOTEM** holdings (
[WWW](http://totem.zapto.org/) 
[COE](https://totem.west.ile.nga.ic.gov/) 
[SBU](https://totem.nga.mil/)
)  
* or follow **TOTEM** milestones (
[WWW](http://totem.zapto.org/milestones.view) 
[COE](https://totem.west.ile.nga.ic.gov/milestones.view) 
[SBU](https://totem.nga.mil/milestones.view)
).

## License

[MIT](LICENSE)

* * *

&copy; 2012 ACMESDS
