# [TOTEM](https://github.com/totem-man/totem)

**TOTEM** provides a web service with the following basic features:

+ endpoint routing
+ http/https service
+ denial-of-service protection
+ secure link for encrypted inter-client communications and antibot protection
+ client profiles 
+ PKI encryption and authentication
+ fault protected run states
+ indexing, uploading, downloading and cacheing static files
+ crud interface to notebooks, mysql and neo4j databases
+ task queuing and regulation
+ watchdog periodic file polling and services
+ cert generation
+ task sharding
+ file stream and ingest
+ data fetching using various protocols
+ smartcard reader
+ site skinning 

**TOTEM** defines POST-GET-PUT-DELETE endpoint *NODE*s:

	DATASET.TYPE ? QUERY
	NOTEBOOK.TYPE ? QUERY
	AREA/PATH/FILE.TYPE ? QUERY
	HOOK.TYPE ? QUERY

to access *DATASET*s, *NOTEBOOK*s, *FILE*s and *HOOK*s as described in **TOTEM**'s
[API](http://totem.hopto.org/api.view) and [skinning guide](https://totem.hopto.org/skinguide.view).

A *TYPE* can filter *DATASET*s:

	db | xml | csv | txt | html | json | blog

or render *NOTEBOOK*s:

	view

The following *HOOK*s:

	riddle | task | ping | login | agent

validate sessions, shard tasks, test connections, establish secure link with clients,
and interface with in-network task agents.

## Manage

	npm install @totemorg/totem		# Install
	npm run start [ ? | $ | ...]	# Unit test
	npm run verminor				# Roll minor version
	npm run vermajor				# Roll major version
	npm run redoc					# Regen documentation

	npm run	startdbs				# Start required database servers
	npm run setprot					# Configure for protected mode
	npm run setdebug				# Configure for debugging mode
	npm run setoper					# Configure for operational mode
	npm run setprod					# Configure for production mode

## Usage

Acquire, optionally configure and start a **TOTEM** server:
	
	const TOTEM = require("@totemorg/totem").config({
		key: value, 						// set key
		"key.key": value, 					// indexed set
		"key.key.": value					// indexed append
	}, sql => {
		console.log( sql ? "look mom - Im running!" : "something evil is lurking" );
	});

where configuration keys follow [ENUMS deep copy conventions](https://github.com/totem-man/enums).


## Program Reference
<details>
<summary>
<i>Open/Close</i>
</summary>
{{>main}}
</details>

## Contacting, Contributing, Following

Feel free to 
* submit and status [TOTEM issues](http://totem.hopto.org/issues.view) 
* contribute to [TOTEM notebooks](http://totem.hopto.org/shares/notebooks/) 
* revise [TOTEM requirements](http://totem.hopto.org/reqts.view) 
* browse [TOTEM holdings](http://totem.hopto.org/) 
* or follow [TOTEM milestones](http://totem.hopto.org/milestones.view) 


## License

[MIT](LICENSE)

* * *

&copy; 2012 ACMESDS
